mixin markdownEditor(label, id, name, rows, size, contents, showPreview, options={})
    - if (!options) { options = {}; }
    if !showPreview
        label.control-label.mb-0.d-inline(for=id)= label
        small.form-text.text-muted.d-inline.ms-2 Supports
            a.ms-1(href='https://commonmark.org/help/' target='_blank') Markdown
                i.bi.bi-box-arrow-up-right.ms-1
        textarea.form-control.markdown-editor(
            id= id
            rows= rows
            name= name
            data-size= size
            data-preview=showPreview
            required=options.required
            disabled=options.disabled
        )
            = contents
    else
        ul.nav.nav-tabs.editor-tabs(id=`${id}-edit-tabs` role="tablist")
            li.nav-item(role="presentation")
                a.nav-link.active(
                    id=`${id}-code-tab`
                    data-bs-toggle="tab"
                    href=`#${id}-code`
                    role="tab"
                    aria-controls=`${id}-code`
                    aria-selected="true"
                )= label
            li.nav-item(role="presentation")
                a.nav-link(
                    id=`${id}-preview-tab`
                    data-bs-toggle="tab"
                    href=`#${id}-preview`
                    role="tab"
                    aria-controls=`${id}-preview`
                    aria-selected="false"
                ) Preview
            if options.badges
                span.mx-2
                    for badge in options.badges
                        .badge.mx-1(class=`text-bg-${badge.color?badge.color:info}`)=badge.name
        .tab-content.pb-2(id=`${id}-editor`)
            .tab-pane.fade.show.active(
                id=`${id}-code`
                role="tabpanel"
                aria-labelledby=`${id}-code-tab`
            )
                textarea.form-control.markdown-editor(
                    id= id
                    rows= rows
                    name= name
                    data-size= size
                    data-preview=showPreview
                    data-previewUrl=options.previewUrl
                    required=options.required
                    disabled=options.disabled
                )
                    = contents
                small.form-text.text-muted
                    a.ms-1(href='https://commonmark.org/help/' target='_blank') Markdown Reference
                        i.bi.bi-box-arrow-up-right.ms-1
                    if options.showImageLink
                        a.ms-4(href='/image' target='_blank') Image List
                            i.bi.bi-box-arrow-up-right.ms-1

            .tab-pane.fade(
                id=`${id}-preview`
                role="tabpanel"
                aria-labelledby=`${id}-preview-tab`
            )
                .overflow-auto.editor-preview.rounded(
                    id=`${id}-preview-frame`
                    style=`height: ${size-2}px`)
                small.form-text.text-muted.invisible Placeholder


mixin htmlEditor(id, name, rows, size, contents, showMd)
    ul.nav.nav-tabs.editor-tabs(id=`${id}-edit-tabs` role="tablist")
        li.nav-item(role="presentation")
            a.nav-link.active(
                id=`${id}-code-tab`
                data-bs-toggle="tab"
                href=`#${id}-code`
                role="tab"
                aria-controls=`${id}-code`
                aria-selected="true"
            ) #{showMd?'HTML/md':'HTML'}
        li.nav-item(role="presentation")
            a.nav-link(
                id=`${id}-preview-tab`
                data-bs-toggle="tab"
                href=`#${id}-preview`
                role="tab"
                aria-controls=`${id}-preview`
                aria-selected="false"
            ) Preview
    .tab-content.pb-2(id=`${id}-editor`)
        .tab-pane.fade.show.active(
            id=`${id}-code`
            role="tabpanel"
            aria-labelledby=`${id}-code-tab`
        )
            textarea.form-control.editor(
                id= id
                rows= rows
                name= name
                data-size= size
                data-type= showMd?'html-md':'html'
            )
                = contents

        .tab-pane.fade(
            id=`${id}-preview`
            role="tabpanel"
            aria-labelledby=`${id}-preview-tab`
        )
            .card.border-secondary
                .card-body.overflow-auto.editor-preview(
                    id=`${id}-preview-frame`
                    style=`height: ${size-2}px`)

mixin jsonEditor(id, name, rows, size, contents)
    textarea.form-control.editor(
        id= id
        rows= rows
        name= name
        data-size= size
        data-type= 'json',
        aria-describedby=`editor-feedback-${id}`
    )
        = !_.isNull(contents)?JSON.stringify(contents, null, 2):''
    .invalid-feedback(id=`editor-feedback-${id}`) Not Valid JSON


mixin cssEditor(id, name, rows, size, contents)
    textarea.form-control.editor(
        id= id
        rows= rows
        name= name
        data-size= size
        data-type= 'css',
        aria-describedby=`editor-feedback-${id}`
    )
        = contents
    .invalid-feedback(id=`editor-feedback-${id}`) Not Valid CSS


append styles
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/codemirror.min.css")
    link(rel='stylesheet' href='/stylesheets/editor.css')



append scripts
    script(src='/javascripts/editor.js')
    script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/codemirror.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/mode/xml/xml.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/mode/css/css.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/mode/htmlmixed/htmlmixed.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.56.0/addon/display/autorefresh.min.js")

    script.
        $(function() {
            $('.markdown-editor').each(function() {
                const $this = $(this);
                const id = $this.attr('id');
                const size = $this.data('size');
                const preview = $this.data('preview');
                const previewUrl = $this.data('previewurl');
                renderMarkdownEditor(id, size, preview, previewUrl);
            });
            $('.editor').each(function() {
                const $this = $(this);
                const id = $this.attr('id');
                const type = $this.data('type');
                const size = $this.data('size');
                renderEditor(id, type, size);
            });


        });

